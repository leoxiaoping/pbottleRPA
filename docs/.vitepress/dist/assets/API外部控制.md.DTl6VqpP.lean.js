import{_ as e,c as a,a0 as r,o as p}from"./chunks/framework.DV-4xFRt.js";const c=JSON.parse('{"title":"外部控制","description":"","frontmatter":{},"headers":[],"relativePath":"API外部控制.md","filePath":"API外部控制.md","lastUpdated":1758440764000}'),o={name:"API外部控制.md"};function l(n,t,i,h,f,b){return p(),a("div",null,t[0]||(t[0]=[r('<h1 id="外部控制" tabindex="-1">外部控制 <a class="header-anchor" href="#外部控制" aria-label="Permalink to &quot;外部控制&quot;">​</a></h1><p>除了实现软件操作自动化外，外部控制功能够实现小瓶RPA自身操作的自动化。</p><p>外部控制提供一系列控制小瓶RPA本身的 <strong>http 接口</strong> ，可以由 第三方系统 或者 RPA集群控制器 发出。</p><p>外部控制功能只对企业版开放 ，详细查看小瓶RPA软件授权：<a href="https://rpa.pbottle.com/License.php" target="_blank" rel="noreferrer">https://rpa.pbottle.com/License.php</a></p><h2 id="外部启动流程" tabindex="-1">外部启动流程 <a class="header-anchor" href="#外部启动流程" aria-label="Permalink to &quot;外部启动流程&quot;">​</a></h2><p>从外部控制启动小瓶RPA开始某项自定义的任务</p><p>用法： <a href="http://ip:49888/?action=pbottleRPA_run&amp;path=%E6%B5%81%E7%A8%8B%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_run&amp;path=流程脚本路径</a></p><ul><li>成功启动任务返回：ok</li><li>上一个任务还未结束：isRunning</li></ul><h2 id="外部停止流程" tabindex="-1">外部停止流程 <a class="header-anchor" href="#外部停止流程" aria-label="Permalink to &quot;外部停止流程&quot;">​</a></h2><p>从外部控制停止小瓶RPA正在运行的任务</p><p>用法：</p><p><a href="http://ip:49888/?action=pbottleRPA_stop" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_stop</a></p><h2 id="当前运行状态" tabindex="-1">当前运行状态 <a class="header-anchor" href="#当前运行状态" aria-label="Permalink to &quot;当前运行状态&quot;">​</a></h2><p>从外部控制查询小瓶RPA正在运行的状态</p><p>用法：</p><p><a href="http://ip:49888/?action=pbottleRPA_state" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_state</a></p><ul><li>未运行状态返回：ready</li><li>正在运行状态返回：isRunning</li></ul><h2 id="外部控制buffer存取" tabindex="-1">外部控制buffer存取 <a class="header-anchor" href="#外部控制buffer存取" aria-label="Permalink to &quot;外部控制buffer存取&quot;">​</a></h2><p>buffer 是小瓶RPA的跨脚本的全局状态变量的存取管理机制。</p><h4 id="bufferset-命令" tabindex="-1">bufferSet 命令 <a class="header-anchor" href="#bufferset-命令" aria-label="Permalink to &quot;bufferSet 命令&quot;">​</a></h4><p>设置buffer存储内容</p><p>此buffer可以跨脚本存取，RPA重启时才重置，存取多线程下安全</p><p>@param {*} n buffer编号，从0-9共10个 默认：0 第一个buffer</p><p>@returns ok 表示成功</p><p>（POST方法）：<a href="http://ip:49888/action=bufferSet&amp;n=0" target="_blank" rel="noreferrer">http://ip:49888/action=bufferSet&amp;n=0</a> ，content设置到Post的body中，通常为json的字符串</p><h4 id="bufferget-命令" tabindex="-1">bufferGet 命令 <a class="header-anchor" href="#bufferget-命令" aria-label="Permalink to &quot;bufferGet 命令&quot;">​</a></h4><p>获取buffer存储内容</p><p>此buffer可以跨脚本存取，RPA重启时才重置，存取多线程下安全</p><p>http外部获取方式：<a href="http://ip:49888/action=bufferGet&amp;n=0" target="_blank" rel="noreferrer">http://ip:49888/action=bufferGet&amp;n=0</a></p><p>@param {*} n buffer编号，从0-9共10个 默认：0 第一个buffer</p><p>@returns 字符串</p><p><a href="http://ip:49888/action=bufferGet&amp;n=0" target="_blank" rel="noreferrer">http://ip:49888/action=bufferGet&amp;n=0</a></p><h2 id="外部设置定时任务" tabindex="-1">外部设置定时任务 <a class="header-anchor" href="#外部设置定时任务" aria-label="Permalink to &quot;外部设置定时任务&quot;">​</a></h2><p>从外部控制修改小瓶RPA的计划任务（定时器）</p><p>用法：</p><p><a href="http://ip:49888/?action=pbottleRPA_plan&amp;plan=" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_plan&amp;plan=</a>* *</p><p>定时器规则参考： <a href="https://www.pbottle.com/a-13868.html" target="_blank" rel="noreferrer">https://www.pbottle.com/a-13868.html</a></p><h2 id="外部获取设备唯一号" tabindex="-1">外部获取设备唯一号 <a class="header-anchor" href="#外部获取设备唯一号" aria-label="Permalink to &quot;外部获取设备唯一号&quot;">​</a></h2><p>外部获取当前设备RPA唯一号</p><p>用法： <a href="http://ip:49888/?action=pbottleRPA_deviceID" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_deviceID</a></p><p>多用于商业加密脚本的分发控制和验证</p><h2 id="外部获取运行日志" tabindex="-1">外部获取运行日志 <a class="header-anchor" href="#外部获取运行日志" aria-label="Permalink to &quot;外部获取运行日志&quot;">​</a></h2><p>外部获取最后一个任务的运行日志</p><p>用法： <a href="http://ip:49888/?action=pbottleRPA_lastLog" target="_blank" rel="noreferrer">http://ip:49888/?action=pbottleRPA_lastLog</a></p><p>通常用来检查详细的运行过程</p><hr><p>获取倒数第二个运行日志 <code>http://ip:49888/?action=pbottleRPA_lastLog2</code></p><h2 id="delayset-设置接力任务" tabindex="-1">delaySet 设置接力任务 <a class="header-anchor" href="#delayset-设置接力任务" aria-label="Permalink to &quot;delaySet 设置接力任务&quot;">​</a></h2><p><code>pbottle.delaySet(scriptPath)</code></p><p>设置接力执行的脚本</p><p>当前脚本结束后（无论正常结束还是错误退出），立刻启动的自动脚本。</p><p>http外部设置方式（GET方法）：<a href="http://ip:49888/action=pbottleRPA_delay&amp;path=MyPATH" target="_blank" rel="noreferrer">http://ip:49888/action=pbottleRPA_delay&amp;path=MyPATH</a></p><p>@param {string} scriptPath 接力脚本的路径 如：&#39;D:/test.mjs&#39; 如果路径为空，默认清除当前已经设置的接力任务。</p><p>@returns {string} ok 表示成功</p><ul><li>监督任务执行 A 任务是一个复杂的长流程，在执行过程中各种问题和错误，导致一定概率不能顺利玩成到任务最后。 这时候在A任务开头设置接力任务B，B 作为 A 的监督员，可以在 A 任务退出时候，验证 A 的关键指标完成。根据验证结果做出通知人工，甚至重启A任务的流程。</li></ul>',55)]))}const u=e(o,[["render",l]]);export{c as __pageData,u as default};
